syntax = "proto3";

option go_package = "gitpct.epam.com/epmd-aepr/aos_service_api/api/systemcore";

import "google/protobuf/any.proto";

package systemcore;

service SystemCore {
    // API for executing an authorized request for a set specified resource (reset, stop etс.).
    // The request must contain the path to the resource and the value that needs to be set for this resource.
    rpc Set(ResourceSetRequest) returns (ResourceSetResponse) {}

    // API for executing an authorized request for a get specified resource (reset, stop etс.).
    // The request must contain the path to the resource.
    rpc Get(ResourceGetRequest) returns (ResourceGetResponse) {}
}

enum ServerCode {
    OK = 0;
    // The server is unable to fulfil the client request because the request is malformed.
    BAD_REQUEST = 400;
    // access_token: [token expired, token invalid, token missing]
    UNAUTHORIZED = 401;
    // service is not permitted to access the requested resource
    FORBIDDEN = 403;
    // The specified data path does not exist.
    NOT_FOUND = 404;
    // The client has sent the server too many requests in a given amount of time.
    TOO_MANY_REQUEST = 429;
    // The server is currently unable to handle the request due to a temporary overload or scheduled maintenance
    SERVICE_UNAVALIBLE = 503;
}

// Request execution status
message Status {
    // request code
    ServerCode code = 1;
    // message containing the result of the request
    string message = 2;
}

// structure containing the path to the requested resource
message Resource {
    // path to resource on system, similar to VIS
    // for example, system.services.restart - for restarting service per Service Provider
    string path_to_resource = 1;
}

message ResourceSetRequest {
    // unique id to get access token
    // this value can be taken from env variable AOS_SECRET
    // inside of container
    string secret = 1;
    // path to resource
    Resource resource = 2;
    // the value to be set for the resource
    google.protobuf.Any value = 3;
}

message ResourceSetResponse {
    Status status = 1;
}

message ResourceGetRequest {
    // unique id to get access token
    // this value can be taken from env variable AOS_SECRET
    // inside of container
    string secret = 1;
    // path to resource
    Resource resource = 2;
}

message ResourceGetResponse {
    // the value of the current state of the resource
    google.protobuf.Any value = 1;
    Status status = 2;
}
